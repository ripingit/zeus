<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.chaoxuan.zeus.dao.QuotaMachineMapper">
	<resultMap id="BaseResultMap" type="org.chaoxuan.zeus.model.QuotaMachine">
		<id column="id" property="id" />
		<result column="category_id" property="categoryId" />
		<result column="category_name" property="categoryName" />
		<result column="unit" property="unit" />
		<result column="title" property="title" />
	</resultMap>

	<sql id="Base_Column_List">
		id, category_id, category_name, unit, title
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_quota_machine
		where id = #{id}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_quota_machine
		where id = #{id}
	</delete>
	<insert id="insert" parameterType="org.chaoxuan.zeus.model.QuotaMachine">
		insert into t_quota_machine (id, category_id, category_name,
		unit, title)
		values (#{id}, #{categoryId}, #{categoryName},
		#{unit}, #{title})
	</insert>
	<insert id="insertSelective" parameterType="org.chaoxuan.zeus.model.QuotaMachine" useGeneratedKeys="true" keyProperty="id">
		insert into t_quota_machine
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="categoryName != null">
				category_name,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="title != null">
				title,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="categoryId != null">
				#{categoryId},
			</if>
			<if test="categoryName != null">
				#{categoryName},
			</if>
			<if test="unit != null">
				#{unit},
			</if>
			<if test="title != null">
				#{title},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.chaoxuan.zeus.model.QuotaMachine">
		update t_quota_machine
		<set>
			<if test="categoryId != null">
				category_id = #{categoryId},
			</if>
			<if test="categoryName != null">
				category_name = #{categoryName},
			</if>
			<if test="unit != null">
				unit = #{unit},
			</if>
			<if test="title != null">
				title = #{title},
			</if>
		</set>
		where id = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.chaoxuan.zeus.model.QuotaMachine">
		update t_quota_machine
		set category_id = #{categoryId},
		category_name = #{categoryName},
		unit = #{unit},
		title = #{title}
		where id = #{id}
	</update>

	<select id="selectByCategoryId" resultType="org.chaoxuan.zeus.model.QuotaMachine" resultMap="findMap">
		select
		m.id, m.category_id, m.category_name, m.unit, m.title,mv.id as id1,mv.version,mv.unit_price,
		mv.area,mv.quota_machine_id
		from t_quota_machine as m left join t_quota_machine_version as mv on m.id=mv.quota_machine_id
		where m.category_id = #{categoryId}
	</select>

	<select id="selectAll" resultType="org.chaoxuan.zeus.model.QuotaMachine" resultMap="findMap">
		select
		m.id, m.category_id, m.category_name, m.unit, m.title,mv.id as id1,mv.version,mv.unit_price,
		mv.area,mv.quota_machine_id
		from t_quota_machine as m left join t_quota_machine_version as mv on m.id=mv.quota_machine_id
		order by m.category_id
	</select>

	<!-- 通过ArrayId -->
	<select id="selectByArrayId" resultType="org.chaoxuan.zeus.model.QuotaMachine" resultMap="findMap">
		select
		m.id, m.category_id, m.category_name, m.unit, m.title,mv.id as id1,mv.version,mv.unit_price,
		mv.area,mv.quota_machine_id
		from t_quota_machine as m left join t_quota_machine_version as mv on m.id=mv.quota_machine_id
		where m.id in
		<foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">
			#{ids}
		</foreach>
	</select>
	<!-- 通过id查询 -->
	<select id="selectById" resultMap="findMap">
		select
		m.id, m.category_id, m.category_name, m.unit, m.title,mv.id as id1,mv.version,mv.unit_price,
		mv.area,mv.quota_machine_id
		from t_quota_machine as m left join t_quota_machine_version as mv on m.id=mv.quota_machine_id
		where m.id = #{id}
	</select>
	
	<select id="findByMap" parameterType="java.util.Map" resultMap="findMap">
		select 
			t1.*,
			t2.id as id1,
			t2.version,
			t2.unit_price,
			t2.area,
			t2.quota_machine_id
		from 
			t_quota_machine as t1 
		left join 
			t_quota_machine_version as t2 
		on 
			t1.id=t2.quota_machine_id
		<where>
			<if test="id != null">
				and t1.id = #{id}
			</if>
			<if test="categoryId != null">
				and t1.category_id = #{categoryId}
			</if>
			<if test="area != null">
				and t2.area like #{area}
			</if>
			<if test="startPrice != null">
				and t2.unit_price >= #{startPrice}
			</if>
			<if test="endPrice != null">
				and t2.unit_price &lt; #{endPrice}
			</if>
		</where>
		order by t1.id
	</select>
	
	<resultMap type="org.chaoxuan.zeus.model.QuotaMachine" id="findMap" extends="BaseResultMap">
		<collection property="machineVersions" ofType="org.chaoxuan.zeus.model.QuotaMachineVersion">
			<id column="id1" property="id" />
			<result column="version" property="version" />
			<result column="unit_price" property="unitPrice" />
			<result column="area" property="area" />
			<result column="quota_machine_id" property="quotaMachineId" />
		</collection>
	</resultMap>
</mapper>