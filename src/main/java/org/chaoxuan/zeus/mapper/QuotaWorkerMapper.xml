<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.chaoxuan.zeus.dao.QuotaWorkerMapper">
	<resultMap id="BaseResultMap" type="org.chaoxuan.zeus.model.QuotaWorker">
		<!-- @mbggenerated -->
		<id column="id" property="id" />
		<result column="category_id" property="categoryId" />
		<result column="category_name" property="categoryName" />
		<result column="unit" property="unit" />
		<result column="title" property="title" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- @mbggenerated -->
		id, category_id, category_name, unit, title
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		<!-- @mbggenerated -->
		 select 
	    <include refid="Base_Column_List" />
	    from t_quota_material
	    where id = #{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- @mbggenerated -->
		delete from t_quota_worker
		where id = #{id}
	</delete>
	<insert id="insert" parameterType="org.chaoxuan.zeus.model.QuotaWorker">
		<!-- @mbggenerated -->
		insert into t_quota_worker (id, category_id, category_name,
		unit, title)
		values (#{id}, #{categoryId}, #{categoryName},
		#{unit}, #{title})
	</insert>
	<insert id="insertSelective" parameterType="org.chaoxuan.zeus.model.QuotaWorker" useGeneratedKeys="true" keyProperty="id">
		<!-- @mbggenerated -->
		insert into t_quota_worker
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="categoryName != null">
				category_name,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="title != null">
				title,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="categoryId != null">
				#{categoryId},
			</if>
			<if test="categoryName != null">
				#{categoryName},
			</if>
			<if test="unit != null">
				#{unit},
			</if>
			<if test="title != null">
				#{title},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.chaoxuan.zeus.model.QuotaWorker">
		<!-- @mbggenerated -->
		update t_quota_worker
		<set>
			<if test="categoryId != null">
				category_id = #{categoryId},
			</if>
			<if test="categoryName != null">
				category_name = #{categoryName},
			</if>
			<if test="unit != null">
				unit = #{unit},
			</if>
			<if test="title != null">
				title = #{title},
			</if>
		</set>
		where id = #{id}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.chaoxuan.zeus.model.QuotaWorker">
		<!-- @mbggenerated -->
		update t_quota_worker
		set category_id = #{categoryId},
		category_name = #{categoryName},
		unit = #{unit},
		title = #{title}
		where id = #{id}
	</update>
	<select id="findByMap" parameterType="java.util.Map" resultMap="findMap">
		select
		w.*,wv.id as idv,wv.version,wv.unit_price,wv.area,wv.quota_worker_id
		from t_quota_worker w left join t_quota_worker_version wv on w.id=wv.quota_worker_id
		<where>
			<if test="id != null">
				and w.id = #{id}
			</if>
			<if test="categoryId != null">
				and w.category_id = #{categoryId}
			</if>
			<if test="version != null">
				and wv.version = #{version}
			</if>
			<if test="area != null">
				and wv.area like #{area}
			</if>
			<if test="startPrice != null">
				and wv.unit_price >= #{startPrice}
			</if>
			<if test="endPrice != null">
				and wv.unit_price &lt; #{endPrice}
			</if>
		</where>
		order by w.id
	</select>

	<!-- 根据categoryId查询 -->
	<select id="selectByCategoryId" resultType="org.chaoxuan.zeus.model.QuotaWorker" resultMap="findMap">
		select
		w.*,wv.id as idv,wv.version,wv.unit_price,wv.area,wv.quota_worker_id
		from t_quota_worker w left join t_quota_worker_version wv on w.id=wv.quota_worker_id
		where w.category_id=#{categoryId}
	</select>

	<!-- 查询所有工人 -->
	<select id="selectAll" resultType="org.chaoxuan.zeus.model.QuotaWorker" resultMap="findMap">
		select
		w.*,wv.id as idv,wv.version,wv.unit_price,wv.area,wv.quota_worker_id
		from t_quota_worker w left join t_quota_worker_version wv on w.id=wv.quota_worker_id
		order by w.category_id
	</select>
	<!-- 通过ArrayId -->
	<select id="selectByArrayId" resultType="org.chaoxuan.zeus.model.QuotaWorker" resultMap="findMap">
		select
		w.*,wv.id as idv,wv.version,wv.unit_price,wv.area,wv.quota_worker_id
		from t_quota_worker w left join t_quota_worker_version wv on w.id=wv.quota_worker_id where w.id in
		<foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">
			#{ids}		
		</foreach>
	</select>
	<select id="selectById" parameterType="java.lang.Integer" resultMap="findMap">
		<!-- @mbggenerated -->
		select
		w.*,wv.id as idv,wv.version,wv.unit_price,wv.area,wv.quota_worker_id
		from t_quota_worker w left join t_quota_worker_version wv on w.id=wv.quota_worker_id  
		where w.id = #{id}
	</select>
	
	<resultMap type="org.chaoxuan.zeus.model.QuotaWorker" id="findMap" extends="BaseResultMap">
		<collection property="workerVersions" ofType="org.chaoxuan.zeus.model.QuotaWorkerVersion">
			<id column="idv" property="id" />
			<result column="version" property="version" />
			<result column="unit_price" property="unitPrice" />
			<result column="area" property="area" />
			<result column="quota_worker_id" property="quotaWorkerId" />
		</collection>
	</resultMap>
	
</mapper>