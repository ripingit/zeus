<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.chaoxuan.zeus.dao.WorkerRestMapper">
    <resultMap id="BaseResultMap" type="org.chaoxuan.zeus.model.WorkerRest">
        <!--
        @mbggenerated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="worker_id" jdbcType="INTEGER" property="workerId"/>
        <result column="start_at" jdbcType="TIMESTAMP" property="startAt"/>
        <result column="end_at" jdbcType="TIMESTAMP" property="endAt"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        id, worker_id, start_at, end_at
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select
        <include refid="Base_Column_List"/>
        from t_worker_rest
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from t_worker_rest
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.chaoxuan.zeus.model.WorkerRest">
        <!--
        @mbggenerated
        -->
        insert into t_worker_rest (id, worker_id, start_at,
        end_at)
        values (#{id,jdbcType=INTEGER}, #{workerId,jdbcType=INTEGER}, #{startAt,jdbcType=TIMESTAMP},
        #{endAt,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="org.chaoxuan.zeus.model.WorkerRest">
        <!--
        @mbggenerated
        -->
        insert into t_worker_rest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="workerId != null">
                worker_id,
            </if>
            <if test="startAt != null">
                start_at,
            </if>
            <if test="endAt != null">
                end_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="workerId != null">
                #{workerId,jdbcType=INTEGER},
            </if>
            <if test="startAt != null">
                #{startAt,jdbcType=TIMESTAMP},
            </if>
            <if test="endAt != null">
                #{endAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.chaoxuan.zeus.model.WorkerRest">
        <!--
        @mbggenerated
        -->
        update t_worker_rest
        <set>
            <if test="workerId != null">
                worker_id = #{workerId,jdbcType=INTEGER},
            </if>
            <if test="startAt != null">
                start_at = #{startAt,jdbcType=TIMESTAMP},
            </if>
            <if test="endAt != null">
                end_at = #{endAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.chaoxuan.zeus.model.WorkerRest">
        <!--
        @mbggenerated
        -->
        update t_worker_rest
        set worker_id = #{workerId,jdbcType=INTEGER},
        start_at = #{startAt,jdbcType=TIMESTAMP},
        end_at = #{endAt,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="find" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        *
        from
        t_worker_rest t
        <where>
            <if test="workerId != null">
                and t.worker_id = #{workerId}
            </if>
            <if test="startAt != null">
                and t.start_at &gt;= #{startAt}
            </if>
            <if test="endAt != null">
                and t.end_at &lt;= #{endAt}
            </if>
            <if test="toDays != null">
                and to_days(#{toDays}) = to_days(t.start_at)
            </if>
        </where>
    </select>


</mapper>